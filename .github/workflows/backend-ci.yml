name: Backend CI

on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  pull_request:
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        working-directory: ./backend
        run: npm ci
      
      - name: Create uploads directory
        working-directory: ./backend
        run: mkdir -p uploads
      
      - name: Run ESLint
        working-directory: ./backend
        run: npm run lint --if-present
      
      - name: Run tests
        working-directory: ./backend
        run: npm test
        env:
          NODE_ENV: test
          MONGODB_TEST_URI: mongodb://localhost:27017/findit_test
          GOOGLE_CLIENT_ID: test-google-client-id
          GOOGLE_CLIENT_SECRET: test-google-client-secret
          GOOGLE_CALLBACK_URL: http://localhost:3000/api/auth/google/callback
          CLIENT_URL: http://localhost:5173
          SESSION_SECRET: test-session-secret
          CLOUDINARY_CLOUD_NAME: test-cloud-name
          CLOUDINARY_API_KEY: test-api-key
          CLOUDINARY_API_SECRET: test-api-secret
      
      - name: Run tests with coverage
        working-directory: ./backend
        run: npm run test:coverage
        env:
          NODE_ENV: test
          GOOGLE_CLIENT_ID: test-google-client-id
          GOOGLE_CLIENT_SECRET: test-google-client-secret
          GOOGLE_CALLBACK_URL: http://localhost:3000/api/auth/google/callback
          CLIENT_URL: http://localhost:5173
          SESSION_SECRET: test-session-secret
          CLOUDINARY_CLOUD_NAME: test-cloud-name
          CLOUDINARY_API_KEY: test-api-key
          CLOUDINARY_API_SECRET: test-api-secret
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./backend/coverage/lcov.info
          flags: backend
          name: backend-coverage

  build:
    name: Backend Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        working-directory: ./backend
        run: npm ci --only=production
      
      - name: Build application
        working-directory: ./backend
        run: npm run build --if-present
      
      # ðŸ”¥ FIXED: Put --exclude options BEFORE the directory
      - name: Create deployment artifact
        run: |
          tar -czf backend-${{ github.sha }}.tar.gz \
            --exclude=backend/node_modules \
            --exclude=backend/tests \
            --exclude=backend/coverage \
            backend/
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-build-${{ github.run_number }}
          path: backend-${{ github.sha }}.tar.gz
          retention-days: 7
